---
format_version: '6'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: react-native
trigger_map:
  - push_branch: "*"
    workflow: primary-android
  - pull_request_source_branch: "*"
    workflow: primary-android
workflows:
  deploy:
    steps:
      - activate-ssh-key@4.0.3:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4.0.13: {}
      - script@1.1.5:
          title: Do anything with Script step
      - npm@1.0.1:
          inputs:
            - command: install
      - install-missing-android-tools@2.3.3:
          inputs:
            - gradlew_path: "$PROJECT_LOCATION/gradlew"
      - android-build@0.9.5:
          inputs:
            - project_location: "$PROJECT_LOCATION"
      - certificate-and-profile-installer@1.10.1: {}
      - xcode-archive@2.4.16:
          inputs:
            - project_path: "$BITRISE_PROJECT_PATH"
            - scheme: "$BITRISE_SCHEME"
            - export_method: "$BITRISE_EXPORT_METHOD"
            - configuration: Release
      - deploy-to-bitrise-io@1.3.18: {}
  primary-android:
    steps:
      - activate-ssh-key@4.0.3:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4.0.13: {}
      - script@1.1.5:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                #set -x

                cd $ANDROID_HOME/emulator

                echo no | avdmanager create avd -n Nexus_5X_API_26 -k "system-images;android-26;google_apis;x86" --force

                emulator -avd Nexus_5X_API_26 -no-window -no-audio -debug-init > /dev/null 2>&1 &

                echo "Waiting emulator is ready..."

                adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

                echo "Emulator is ready!"
          title: Start Android Emulator
      - script@1.1.5:
          title: Add Missing Properties
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x

                echo "
                hw.lcd.height=426
                hw.lcd.width=240
                hw.lcd.density=120
                skin.name=240x426" >> /root/.android/avd/Nexus_5X_API_26.avd/config.ini
      - script@1.1.5:
          title: Install dependencies. Build App. Test App.
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x

                yarn install

                echo "Building Android App"
                yarn build-android-release

                echo "Testing Android App"
                yarn test-android
      - deploy-to-bitrise-io@1.3.18: {}
    meta:
      bitrise.io:
        stack: linux-docker-android-lts
  primary-ios:
    steps:
      - activate-ssh-key@4.0.3:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4.0.13: {}
      - script@1.1.5:
          title: Install dependencies. Build App. Test App.
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x

                brew tap wix/brew
                brew install AppleSimUtils
                yarn install
                yarn build-ios-release
                yarn test-ios
      - deploy-to-bitrise-io@1.3.18: {}
app:
  envs:
    - opts:
        is_expand: false
      PROJECT_LOCATION: android
    - opts:
        is_expand: false
      MODULE: app
    - opts:
        is_expand: false
      VARIANT: _
    - opts:
        is_expand: false
      BITRISE_PROJECT_PATH: ios/SampleApp.xcodeproj
    - opts:
        is_expand: false
      BITRISE_SCHEME: SampleApp
    - opts:
        is_expand: false
      BITRISE_EXPORT_METHOD: ad-hoc
